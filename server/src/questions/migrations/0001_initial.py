# Generated by Django 5.0.6 on 2024-07-25 14:24

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence_number', models.PositiveIntegerField(editable=False)),
                ('content', models.TextField()),
                ('is_correct', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence_number', models.PositiveIntegerField(editable=False)),
                ('fill_in_the_blanks_data', models.JSONField(blank=True, default=dict, help_text='Data for fill in the blanks questions', null=True)),
                ('question_type', models.CharField(choices=[('MCQ', 'Multiple Choice Question'), ('SA', 'Short Answer'), ('TF', 'True or False'), ('ES', 'Essay'), ('FB', 'Fill in the Blanks')], default='MCQ', max_length=10)),
                ('content', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='question_images/')),
                ('video', models.FileField(blank=True, null=True, upload_to='question_videos/')),
                ('marks', models.PositiveIntegerField(default=1, verbose_name='Marks for the question')),
                ('correct_answer', models.BooleanField(blank=True, default=True, help_text='Correct answer for true/false questions', null=True)),
                ('explanation_enabled', models.BooleanField(default=False)),
                ('explanation_text', models.TextField(blank=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_answer', models.TextField(blank=True, null=True)),
                ('is_fill_in_correct', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='StudentTestSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('total_marks', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('test_type', models.CharField(choices=[('MCQ', 'Multiple Choice Questions'), ('SA', 'Short Answer'), ('TF', 'True or False'), ('ES', 'Essay'), ('MX', 'Mixed'), ('FB', 'Fill in the Blanks')], default='MCQ', max_length=3, verbose_name='Type of Test')),
                ('max_time', models.PositiveIntegerField(help_text='Time in minutes')),
                ('start_time', models.DateTimeField(blank=True, help_text='The time when the test becomes available', null=True)),
                ('end_time', models.DateTimeField(blank=True, help_text='The time when the test is no longer available', null=True)),
                ('auto_mark', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
    ]
