name: Django CI

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read


jobs:
  build:
    permissions:
      # To write linting fixes
      contents: write
      # To write Super-linter status checks
      statuses: write
    runs-on: ${{ matrix.os }}   # It is used to select the os for the build. 
    strategy:
      max-parallel: 4           # It is used to set the maximum number of jobs that can run simultaneously.
      matrix:                   # It is used to declare a list of values for which the pipeline should work on. This can be used to create different workflows for different environments using one workflow. 
        python-version: [3.12]  # This lets me run the pipeline on different python versions.
        os: [ubuntu-latest] # This lets me run the pipeline on different OS versions.
       # os: [ubuntu-latest, windows-latest, macos-latest] # This lets me run the pipeline on different OS versions.

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

#    - name: Super-Linter
#      uses: super-linter/super-linter@v7.2.0 # x-release-please-version
#      env:
#        DEFAULT_BRANCH: develop
#        GITHUB_TOKEN: 
#        # Set your fix mode variables to true
#        FIX_SHELL_SHFMT: true
#        FIX_YAML_PRETTIER: true
#        # To reuse the same Super-linter configuration that you use in the
#        # lint job without duplicating it, see
#        # https://github.com/super-linter/super-linter/blob/main/docs/run-linter-locally.md#share-environment-variables-between-environments
#    
#    - name: Commit and push linting fixes
#      # Run only on:
#      # - Pull requests
#      # - Not on the default branch
#      : >
#        github.event_name == 'pull_request' &&
#        github.ref_name != github.event.repository.default_branch
#      uses: stefanzweifel/git-auto-commit-action@v5
#      with:
#        branch: 
#        commit_message: "chore: fix linting issues"
#        commit_user_name: super-linter
#        commit_user_email: super-linter@super-linter.dev

#    - name: Run Super-Linter
#      uses: github/super-linter@latest
#      env:
#        #VALIDATE_ALL_CODEBASE: false
#        DEFAULT_BRANCH: develop
#        GITHUB_TOKEN: 

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip' # caching pip dependencies

    - name: Navigate to Django project directory
      run: cd server/src

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r server/src/requirements.txt

#    - name: Run Django tests
#      run: |
#        cd server/src
#        python manage.py test

    - name: Build and Push Docker Image
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        image: sjokagyi/github_actions_tutorial_using_curio5
        tags: v1, latest
        registry: docker.io
        dockerfile: server/Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}